<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>CADisableMinimumFrameDurationOnPhone</key>
	<true/>
	<key>CFBundleDevelopmentRegion</key>
	<string>$(DEVELOPMENT_LANGUAGE)</string>
<<<<<<< HEAD
	<key>NSCameraUsageDescription</key>
	<string>This app requires access to the function to scan Qrcode is only available to admins, the owner of the shop this app has been designed for, not for clients of the Beauty shop that uses the app to manage appointments, on the Loyalty card screen, there is an icon to open a QrCode with information about the user, when the admin scans that QrCode the app consequently change the status of the appointment from "confirmed" to "archived" and add 25 points to the loyalty card total points</string>
	<key>NSLocationAlwaysUsageDescription</key>
	<string>This app requires access to the function to scan Qrcode is only available to admins, the owner of the shop this app has been designed for, not for clients of the Beauty shop that uses the app to manage appointments, on the Loyalty card screen, there is an icon to open a QrCode with information about the user, when the admin scans that QrCode the app consequently change the status of the appointment from "confirmed" to "archived" and add 25 points to the loyalty card total points</string>
	<key>NSLocationWhenInUseUsageDescription</key>
	<string>This app requires access to the function to scan Qrcode is only available to admins, the owner of the shop this app has been designed for, not for clients of the Beauty shop that uses the app to manage appointments, on the Loyalty card screen, there is an icon to open a QrCode with information about the user, when the admin scans that QrCode the app consequently change the status of the appointment from "confirmed" to "archived" and add 25 points to the loyalty card total points</string>
	<key>NSMicrophoneUsageDescription</key>
	<string>This app requires access to the function to scan Qrcode is only available to admins, the owner of the shop this app has been designed for, not for clients of the Beauty shop that uses the app to manage appointments, on the Loyalty card screen, there is an icon to open a QrCode with information about the user, when the admin scans that QrCode the app consequently change the status of the appointment from "confirmed" to "archived" and add 25 points to the loyalty card total points.</string>
	<key>NSPhotoLibraryUsageDescription</key>
	<string>This app requires access to the function to scan Qrcode is only available to admins, the owner of the shop this app has been designed for, not for clients of the Beauty shop that uses the app to manage appointments, on the Loyalty card screen, there is an icon to open a QrCode with information about the user, when the admin scans that QrCode the app consequently change the status of the appointment from "confirmed" to "archived" and add 25 points to the loyalty card total points.</string>
	<key>NSCalendarsUsageDescription</key>
    <string>This app requires access to the one of our clients create an appointment, or the admin create one for them, when the user go on details they have the possibility to add their appointments to their google calendar, so we ask first for the permission of the calendar in order for them to be able to add it to their own Google Calendar app.</string>
    <key>NSLocationAlwaysAndWhenInUseUsageDescription</key>
    <string>This app requires access to the function to scan Qrcode is only available to admins, the owner of the shop this app has been designed for, not for clients of the Beauty shop that uses the app to manage appointments, on the Loyalty card screen, there is an icon to open a QrCode with information about the user, when the admin scans that QrCode the app consequently change the status of the appointment from "confirmed" to "archived" and add 25 points to the loyalty card total points.</string>
=======
	<key>NSCalendarsUsageDescription</key>
	<string>We will open calendar for you to add meeting to calendar.</string>
	<key>NSCalendarsUsageDescription</key>
	<string>For location auto complete.</string>
>>>>>>> a7b79b91bb16a5abae7fea901dc01f535a0ebb5e
	<key>CFBundleDisplayName</key>
	<string>Aetherium Saloon App</string>
	<key>CFBundleExecutable</key>
	<string>$(EXECUTABLE_NAME)</string>
	<key>CFBundleIdentifier</key>
	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
	<key>CFBundleInfoDictionaryVersion</key>
	<string>6.0</string>
	<key>CFBundleName</key>
	<string>aetherium_saloon_app</string>
	<key>CFBundlePackageType</key>
	<string>APPL</string>
	<key>CFBundleShortVersionString</key>
	<string>$(FLUTTER_BUILD_NAME)</string>
	<key>CFBundleSignature</key>
	<string>????</string>
	<key>CFBundleVersion</key>
	<string>$(FLUTTER_BUILD_NUMBER)</string>
	<key>LSRequiresIPhoneOS</key>
	<true/>
<<<<<<< HEAD
=======
	<key>NSCameraUsageDescription</key>
	<string>Need to upload image</string>
	<key>NSMicrophoneUsageDescription</key>
	<string>Need to upload image</string>
	<key>NSPhotoLibraryUsageDescription</key>
	<string>Need to upload image</string>
>>>>>>> a7b79b91bb16a5abae7fea901dc01f535a0ebb5e
	<key>UIApplicationSupportsIndirectInputEvents</key>
	<true/>
	<key>UIBackgroundModes</key>
	<array>
		<string>fetch</string>
		<string>remote-notification</string>
	</array>
	<key>UILaunchStoryboardName</key>
	<string>LaunchScreen</string>
	<key>UIMainStoryboardFile</key>
	<string>Main</string>
	<key>UISupportedInterfaceOrientations</key>
	<array>
		<string>UIInterfaceOrientationPortrait</string>
		<string>UIInterfaceOrientationLandscapeLeft</string>
		<string>UIInterfaceOrientationLandscapeRight</string>
	</array>
	<key>UISupportedInterfaceOrientations~ipad</key>
	<array>
		<string>UIInterfaceOrientationPortrait</string>
		<string>UIInterfaceOrientationPortraitUpsideDown</string>
		<string>UIInterfaceOrientationLandscapeLeft</string>
		<string>UIInterfaceOrientationLandscapeRight</string>
	</array>
	<key>UIViewControllerBasedStatusBarAppearance</key>
	<false/>
</dict>
</plist>
